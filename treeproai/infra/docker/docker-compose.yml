version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: treeproai-postgres
    restart: always
    environment:
      POSTGRES_DB: treeproai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: treeproai-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio:latest
    container_name: treeproai-minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  api:
    build:
      context: ../..
      dockerfile: infra/docker/api.Dockerfile
    container_name: treeproai-api
    restart: unless-stopped
    env_file: ../../.env
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/treeproai
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
      - minio
    develop:
      watch:
        - action: sync
          path: ./apps/api
          target: /usr/src/app/apps/api
        - action: sync
          path: ./packages
          target: /usr/src/app/packages

  worker:
    build:
      context: ../..
      dockerfile: infra/docker/api.Dockerfile
    container_name: treeproai-worker
    restart: unless-stopped
    env_file: ../../.env
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/treeproai
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
    command: pnpm --filter @treeproai/api start:worker
    depends_on:
      - api
    develop:
      watch:
        - action: sync
          path: ./apps/api
          target: /usr/src/app/apps/api
        - action: sync
          path: ./packages
          target: /usr/src/app/packages

  workers:
    build:
      context: ../..
      dockerfile: infra/docker/api.Dockerfile
    container_name: treeproai-workers
    restart: unless-stopped
    env_file: ../../.env
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/treeproai
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
    command: pnpm --filter @treeproai/workers dev
    depends_on:
      - api
    develop:
      watch:
        - action: sync
          path: ./apps/workers
          target: /usr/src/app/apps/workers
        - action: sync
          path: ./packages
          target: /usr/src/app/packages

  ai-vision:
    build:
      context: ../..
      dockerfile: infra/docker/ai-vision.Dockerfile
    container_name: treeproai-ai-vision
    restart: unless-stopped
    ports:
      - "8000:8000"
    develop:
      watch:
        - action: sync
          path: ./services/ai-vision
          target: /app

  ai-pricing:
    build:
      context: ../..
      dockerfile: infra/docker/ai-pricing.Dockerfile
    container_name: treeproai-ai-pricing
    restart: unless-stopped
    ports:
      - "8001:8001"
    develop:
      watch:
        - action: sync
          path: ./services/ai-pricing
          target: /app

  web:
    build:
      context: ../..
      dockerfile: infra/docker/web.Dockerfile
    container_name: treeproai-web
    restart: unless-stopped
    env_file: ../../.env
    ports:
      - "3000:3000"
    depends_on:
      - api
    develop:
      watch:
        - action: sync
          path: ./apps/web
          target: /usr/src/app/apps/web
        - action: sync
          path: ./packages
          target: /usr/src/app/packages

volumes:
  postgres_data:
  redis_data:
  minio_data: